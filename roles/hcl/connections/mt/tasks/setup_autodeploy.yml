---
- name:               Verify if AutoDeploy is already installed
  stat:
    path:             "{{ __autodeploy_install_success_file }}"
  register:           autodeploy_already_installed

- name:               Edit config.properties
  replace:
    path:             "{{ __tmp_dir }}/mt/install/config.properties"
    regexp:           "^(?!#){{ item.prop_name }}=(.*)$"
    replace:          "{{ item.prop_name }}={{ item.prop_value }}"
  with_items:
    - { prop_name: "DMGR_PROFILE", prop_value: "{{ __dmgr_profile_r }}" }
    - { prop_name: "DMGR_NAME", prop_value: "{{ __dmgrname_profile_r }}" }
    - { prop_name: "WAS_HOME", prop_value: "{{ __was_home_profile_r }}" }
    - { prop_name: "APPSRV_PROFILE", prop_value: "{{ __was_appsrv_profile_r }}" }
    - { prop_name: "IHS_HOME", prop_value: "{{ __ihs_home_r }}" }
    - { prop_name: "DMGR_SOAP_PORT", prop_value: "{{ __dmgrsoap_port_r }}" }
    - { prop_name: "CELL_NAME", prop_value: "{{ __cell_name_r }}" }
    - { prop_name: "WASADMIN_USER", prop_value: "{{ __wasadmin_user_r }}" }
    - { prop_name: "WASADMIN_PASSWORD", prop_value: "{{ __wasadmin_password_r }}" }
    - { prop_name: "CONNECTIONS_PATH", prop_value: "{{ __connections_path_r }}" }
    - { prop_name: "AUTODEPLOY_HOME", prop_value: "{{ __autodeploy_home_r }}" }
    - { prop_name: "AUTODEPLOY_AUTH_METHOD", prop_value: "{{ __autodeploy_auth_method_r }}" }
    - { prop_name: "AUTODEPLOY_AUTH", prop_value: "{{ __autodeploy_auth_r }}" }
    - { prop_name: "DB2_USER", prop_value: "{{ __db_user_r }}" }
    - { prop_name: "DB2_PASSWORD", prop_value: "{{ __db_password_r }}" }

- name:                Add WAS admin to soap.client.props
  replace:
    path:              "{{ __was_install_location }}/profiles/{{ __profile_name }}/properties/soap.client.props"
    regexp:            "^(?!#){{ item.prop_name }}=(.*)$"
    replace:           "{{ item.prop_name }}={{ item.prop_value }}"
    backup:            "{{ item.backup }}"
  with_items:
    - { prop_name: "com.ibm.SOAP.loginUserid", prop_value: "{{ __ic_admin_username }}", backup: yes }
    - { prop_name: "com.ibm.SOAP.loginPassword", prop_value: "{{ __ic_admin_password }}", backup: no }
  when:                not autodeploy_already_installed.stat.exists

- name:                Install AutoDeploy
  shell: |
     set timeout 300
     ./autodeploy-install-cli.sh config.properties 2>&1 | tee autodeploy_install.log
  args:
      chdir:           "{{ __tmp_dir }}/mt/install"
  when:
      - not autodeploy_already_installed.stat.exists
  register:            autodeploy_install_performed
  failed_when:         "'AUTODEPLOY is now ready to rock your deployment' not in autodeploy_install_performed.stdout"

- name:               "Create {{ __autodeploy_install_success_file }} file"
  file:
    path:             "{{ __autodeploy_install_success_file }}"
    state:            touch
  when:
    - autodeploy_install_performed is not skipped
    
